package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.56

import (
	"context"

	"github.com/nmarsollier/cataloggo/graph/model"
	"github.com/nmarsollier/cataloggo/graph/resolvers"
)

// DeleteArticle is the resolver for the deleteArticle field.
func (r *mutationResolver) DeleteArticle(ctx context.Context, id string) (bool, error) {
	return resolvers.DeleteArticle(ctx, id)
}

// CreateArticle is the resolver for the createArticle field.
func (r *mutationResolver) CreateArticle(ctx context.Context, input model.UpdateArticle) (bool, error) {
	return resolvers.CreateArticle(ctx, input)
}

// UpdateArticle is the resolver for the updateArticle field.
func (r *mutationResolver) UpdateArticle(ctx context.Context, input model.UpdateArticle) (bool, error) {
	return resolvers.UpdateArticle(ctx, input)
}

// GetArticle is the resolver for the getArticle field.
func (r *queryResolver) GetArticle(ctx context.Context, id string) (*model.Article, error) {
	return resolvers.GetArticle(ctx, id)
}

// SearchArticles is the resolver for the searchArticles field.
func (r *queryResolver) SearchArticles(ctx context.Context, criteria string) ([]*model.Article, error) {
	return resolvers.SearchArticles(ctx, criteria)
}

// Mutation returns model.MutationResolver implementation.
func (r *Resolver) Mutation() model.MutationResolver { return &mutationResolver{r} }

// Query returns model.QueryResolver implementation.
func (r *Resolver) Query() model.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
